//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Envelope.Localization;

namespace Envelope.Validation;

public partial class Resources
{
	public partial class ValidationKeys
	{
		public const string __BaseName = "Resources.Validation";

		public const string DefaultOrEmpty = "DefaultOrEmpty";

		public const string DefaultOrEmpty_WithProperty = "DefaultOrEmpty_WithProperty";

		public const string Email = "Email";

		public const string Email_WithProperty = "Email_WithProperty";

		public const string Equal = "Equal";

		public const string Equal_WithProperty = "Equal_WithProperty";

		public const string ExclusiveBetween = "ExclusiveBetween";

		public const string ExclusiveBetween_WithProperty = "ExclusiveBetween_WithProperty";

		public const string ExclusiveInclusiveBetween = "ExclusiveInclusiveBetween";

		public const string ExclusiveInclusiveBetween_WithProperty = "ExclusiveInclusiveBetween_WithProperty";

		public const string GreaterThan = "GreaterThan";

		public const string GreaterThan_WithProperty = "GreaterThan_WithProperty";

		public const string GreaterThanOrEqual = "GreaterThanOrEqual";

		public const string GreaterThanOrEqual_WithProperty = "GreaterThanOrEqual_WithProperty";

		public const string InclusiveBetween = "InclusiveBetween";

		public const string InclusiveBetween_WithProperty = "InclusiveBetween_WithProperty";

		public const string InclusiveExclusiveBetween = "InclusiveExclusiveBetween";

		public const string InclusiveExclusiveBetween_WithProperty = "InclusiveExclusiveBetween_WithProperty";

		public const string Length = "Length";

		public const string Length_WithProperty = "Length_WithProperty";

		public const string LessThan = "LessThan";

		public const string LessThan_WithProperty = "LessThan_WithProperty";

		public const string LessThanOrEqual = "LessThanOrEqual";

		public const string LessThanOrEqual_WithProperty = "LessThanOrEqual_WithProperty";

		public const string MultiEqual = "MultiEqual";

		public const string MultiEqual_WithProperty = "MultiEqual_WithProperty";

		public const string MultiExclusiveBetween = "MultiExclusiveBetween";

		public const string MultiExclusiveBetween_WithProperty = "MultiExclusiveBetween_WithProperty";

		public const string MultiInclusiveBetween = "MultiInclusiveBetween";

		public const string MultiInclusiveBetween_WithProperty = "MultiInclusiveBetween_WithProperty";

		public const string MultiNotEqual = "MultiNotEqual";

		public const string MultiNotEqual_WithProperty = "MultiNotEqual_WithProperty";

		public const string NotDefaultOrEmpty = "NotDefaultOrEmpty";

		public const string NotDefaultOrEmpty_WithProperty = "NotDefaultOrEmpty_WithProperty";

		public const string NotEqual = "NotEqual";

		public const string NotEqual_WithProperty = "NotEqual_WithProperty";

		public const string NotNull = "NotNull";

		public const string NotNull_WithProperty = "NotNull_WithProperty";

		public const string Null = "Null";

		public const string Null_WithProperty = "Null_WithProperty";

		public const string PrecisionScale = "PrecisionScale";

		public const string PrecisionScale_WithProperty = "PrecisionScale_WithProperty";

		public const string RegEx = "RegEx";

		public const string RegEx_WithProperty = "RegEx_WithProperty";
	}

	public partial class ValidationLocalizerFactory : ResourceLocalizer<Resources.ValidationKeys>
	{
		public ValidationLocalizerFactory(IServiceProvider serviceProvider)
			: base(serviceProvider,
				ValidationKeys.__BaseName,
				new System.Reflection.AssemblyName(typeof(ValidationLocalizerFactory).Assembly.FullName).Name)
		{
		}
	}
}
